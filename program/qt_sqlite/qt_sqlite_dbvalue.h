/// $Header
/// ============================================================================
///		Author		: M. Ivanchenko
///		Date create	: 18-06-2013
///		Date update	: 20-06-2013
///		Comment		:
/// ============================================================================
#ifndef __QT_SQLITE_DBVALUE_H__
#define __QT_SQLITE_DBVALUE_H__

#include <sqlite3.h>
#include <QVariant>

namespace espira
{

namespace db
{
/// ############################################################################
///			class qt_sqlite_dbvalue
/// ############################################################################
    class qt_sqlite_dbvalue
	{
    /// ========================================================================
    ///		CONSTRUCTORS/DESTRUCTOR
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue( const qt_sqlite_dbvalue &rhs );

	public:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue( ) { }
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue( const QVariant &val ) :
            _value( val )
        { }
        /// --------------------------------------------------------------------
        virtual ~qt_sqlite_dbvalue( ) { }

    /// ========================================================================
    ///		FUNCTIONS
    /// ========================================================================
    private:

	public:
        /// --------------------------------------------------------------------
        virtual int bind_query_parameter( sqlite3_stmt *p_stmt, int n_param ) = 0;

    /// ========================================================================
    ///		PROPERTIES
    /// ========================================================================
    private:

	public:
        /// --------------------------------------------------------------------
        const QVariant& value( ) const
        { return this->_value; }
        /// --------------------------------------------------------------------
        void value( const QVariant &val )
        { this->_value = val; }

    /// ========================================================================
    ///		OPERATORS
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue& operator=( const qt_sqlite_dbvalue &rhs );

	public:

    /// ========================================================================
    ///			FIELDS
    /// ========================================================================
    private:
        QVariant _value;

    };//class qt_sqlite_dbvalue
/// ############################################################################
/// ----------------------------------------------------------------------------

/// ############################################################################
///			class qt_sqlite_dbvalue_null
/// ############################################################################
    class qt_sqlite_dbvalue_null : public qt_sqlite_dbvalue
    {
    /// ========================================================================
    ///		CONSTRUCTORS/DESTRUCTOR
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_null( const qt_sqlite_dbvalue_null &rhs );

    public:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_null( ) :
            qt_sqlite_dbvalue( QVariant(QVariant::Invalid ) )
        { }
        /// --------------------------------------------------------------------
        virtual ~qt_sqlite_dbvalue_null( ) { }

    /// ========================================================================
    ///		FUNCTIONS
    /// ========================================================================
    private:

    public:
        /// --------------------------------------------------------------------
        virtual int bind_query_parameter( sqlite3_stmt *p_stmt, int n_param );

    /// ========================================================================
    ///		PROPERTIES
    /// ========================================================================
    private:

    public:

    /// ========================================================================
    ///		OPERATORS
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_null& operator=( const qt_sqlite_dbvalue_null &rhs );

    public:

    /// ========================================================================
    ///			FIELDS
    /// ========================================================================
    private:

    };//class qt_sqlite_dbvalue_null
/// ############################################################################
/// ----------------------------------------------------------------------------

/// ############################################################################
///			class qt_sqlite_dbvalue_int
/// ############################################################################
    class qt_sqlite_dbvalue_int : public qt_sqlite_dbvalue
    {
    /// ========================================================================
    ///		CONSTRUCTORS/DESTRUCTOR
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_int( const qt_sqlite_dbvalue_int &rhs );

    public:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_int( ) :
            qt_sqlite_dbvalue( )
        { }
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_int( const QVariant &val ) :
            qt_sqlite_dbvalue( val )
        { }
        /// --------------------------------------------------------------------
        virtual ~qt_sqlite_dbvalue_int( ) { }

    /// ========================================================================
    ///		FUNCTIONS
    /// ========================================================================
    private:

    public:
        /// --------------------------------------------------------------------
        virtual int bind_query_parameter( sqlite3_stmt *p_stmt, int n_param );

    /// ========================================================================
    ///		PROPERTIES
    /// ========================================================================
    private:

    public:

    /// ========================================================================
    ///		OPERATORS
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_int& operator=( const qt_sqlite_dbvalue_int &rhs );

    public:

    /// ========================================================================
    ///			FIELDS
    /// ========================================================================
    private:

    };//class qt_sqlite_dbvalue_int
/// ############################################################################
/// ----------------------------------------------------------------------------

/// ############################################################################
///			class qt_sqlite_dbvalue_int64
/// ############################################################################
    class qt_sqlite_dbvalue_int64 : public qt_sqlite_dbvalue
    {
    /// ========================================================================
    ///		CONSTRUCTORS/DESTRUCTOR
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_int64( const qt_sqlite_dbvalue_int64 &rhs );

    public:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_int64( ) :
            qt_sqlite_dbvalue( )
        { }
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_int64( const QVariant &val ) :
            qt_sqlite_dbvalue( val )
        { }
        /// --------------------------------------------------------------------
        virtual ~qt_sqlite_dbvalue_int64( ) { }

    /// ========================================================================
    ///		FUNCTIONS
    /// ========================================================================
    private:

    public:
        /// --------------------------------------------------------------------
        virtual int bind_query_parameter( sqlite3_stmt *p_stmt, int n_param );

    /// ========================================================================
    ///		PROPERTIES
    /// ========================================================================
    private:

    public:

    /// ========================================================================
    ///		OPERATORS
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_int64& operator=( const qt_sqlite_dbvalue_int64 &rhs );

    public:

    /// ========================================================================
    ///			FIELDS
    /// ========================================================================
    private:

    };//class qt_sqlite_dbvalue_int64
/// ############################################################################
/// ----------------------------------------------------------------------------

/// ############################################################################
///			class qt_sqlite_dbvalue_double
/// ############################################################################
    class qt_sqlite_dbvalue_double : public qt_sqlite_dbvalue
    {
    /// ========================================================================
    ///		CONSTRUCTORS/DESTRUCTOR
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_double( const qt_sqlite_dbvalue_double &rhs );

    public:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_double( ) :
            qt_sqlite_dbvalue( )
        { }
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_double( const QVariant &val ) :
            qt_sqlite_dbvalue( val )
        { }
        /// --------------------------------------------------------------------
        virtual ~qt_sqlite_dbvalue_double( ) { }

    /// ========================================================================
    ///		FUNCTIONS
    /// ========================================================================
    private:

    public:
        /// --------------------------------------------------------------------
        virtual int bind_query_parameter( sqlite3_stmt *p_stmt, int n_param );

    /// ========================================================================
    ///		PROPERTIES
    /// ========================================================================
    private:

    public:

    /// ========================================================================
    ///		OPERATORS
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_double& operator=( const qt_sqlite_dbvalue_double &rhs );

    public:

    /// ========================================================================
    ///			FIELDS
    /// ========================================================================
    private:

    };//class qt_sqlite_dbvalue_double
/// ############################################################################
/// ----------------------------------------------------------------------------

/// ############################################################################
///			class qt_sqlite_dbvalue_text
/// ############################################################################
    class qt_sqlite_dbvalue_text : public qt_sqlite_dbvalue
    {
    /// ========================================================================
    ///		CONSTRUCTORS/DESTRUCTOR
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_text( const qt_sqlite_dbvalue_text &rhs );

    public:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_text( ) :
            qt_sqlite_dbvalue( ),
            _param_buf( 0 )
        { }
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_text( const QVariant &val ) :
            qt_sqlite_dbvalue( val ),
            _param_buf( 0 )
        { }
        /// --------------------------------------------------------------------
        virtual ~qt_sqlite_dbvalue_text( )
        {
            this->free( );
        }

    /// ========================================================================
    ///		FUNCTIONS
    /// ========================================================================
    private:
        void free( )
        {
            if( this->_param_buf )
            {
                delete _param_buf;
            }
        }

    public:
        /// --------------------------------------------------------------------
        virtual int bind_query_parameter( sqlite3_stmt *p_stmt, int n_param );

    /// ========================================================================
    ///		PROPERTIES
    /// ========================================================================
    private:

    public:

    /// ========================================================================
    ///		OPERATORS
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_text& operator=( const qt_sqlite_dbvalue_text &rhs );

    public:

    /// ========================================================================
    ///			FIELDS
    /// ========================================================================
    private:
        QByteArray *_param_buf;

    };//class qt_sqlite_dbvalue_text
/// ############################################################################
/// ----------------------------------------------------------------------------

/// ############################################################################
///			class qt_sqlite_dbvalue_blob
/// ############################################################################
    class qt_sqlite_dbvalue_blob : public qt_sqlite_dbvalue
    {
    /// ========================================================================
    ///		CONSTRUCTORS/DESTRUCTOR
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_blob( const qt_sqlite_dbvalue_blob &rhs );

    public:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_blob( ) :
            qt_sqlite_dbvalue( ),
            _param_buf( 0 )
        { }
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_blob( const QVariant &val ) :
            qt_sqlite_dbvalue( val ),
            _param_buf( 0 )
        { }
        /// --------------------------------------------------------------------
        virtual ~qt_sqlite_dbvalue_blob( )
        { this->free( ); }

    /// ========================================================================
    ///		FUNCTIONS
    /// ========================================================================
    private:
        void free( )
        {
            if( this->_param_buf )
            {
                delete _param_buf;
            }
        }

    public:
        /// --------------------------------------------------------------------
        virtual int bind_query_parameter( sqlite3_stmt *p_stmt, int n_param );

    /// ========================================================================
    ///		PROPERTIES
    /// ========================================================================
    private:

    public:

    /// ========================================================================
    ///		OPERATORS
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_blob& operator=( const qt_sqlite_dbvalue_blob &rhs );

    public:

    /// ========================================================================
    ///			FIELDS
    /// ========================================================================
    private:
        QByteArray *_param_buf;

    };//class qt_sqlite_dbvalue_blob
/// ############################################################################

/// ############################################################################
///			enum sqlite_value_type
/// ############################################################################
    enum sqlite_value_type
    {
        type_integer    = SQLITE_INTEGER,
        type_float      = SQLITE_FLOAT,
        type_text       = SQLITE_TEXT,
        type_blob       = SQLITE_BLOB,
        type_null       = SQLITE_NULL
    };
/// ############################################################################
///			class qt_sqlite_dbvalue_creator
/// ############################################################################
    class qt_sqlite_dbvalue_creator
    {
    /// ========================================================================
    ///		CONSTRUCTORS/DESTRUCTOR
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        qt_sqlite_dbvalue_creator( const qt_sqlite_dbvalue_creator &rhs );
        /// --------------------------------------------------------------------
        /// this object permit only static function call
        ~qt_sqlite_dbvalue_creator( ) { }

    /// ========================================================================
    ///		FUNCTIONS
    /// ========================================================================
    private:
        /// --------------------------------------------------------------------
        static QVariant* parse_query_value_text( sqlite3_stmt *p_stmt, int n_column );
        /// --------------------------------------------------------------------
        static QVariant* parse_query_value_blob( sqlite3_stmt *p_stmt, int n_column );
        /// --------------------------------------------------------------------
        static QVariant* parse_query_value_text( sqlite3_value *val );
        /// --------------------------------------------------------------------
        static QVariant* parse_query_value_blob( sqlite3_value *val );

    public:
        /// --------------------------------------------------------------------
        static qt_sqlite_dbvalue* create( sqlite3_value *val );
        /// --------------------------------------------------------------------
        static QVariant* create_variant( sqlite3_value *val );
        /// --------------------------------------------------------------------
        static QVariant* parse_query_column_value( sqlite3_stmt *p_stmt, int n_column );

    };//class qt_sqlite_dbvalue_creator

/// ----------------------------------------------------------------------------

}//namespace db

}//namespace espira

#endif // __QT_SQLITE_DBVALUE_H__
