/// ============================================================================
///		Author		: M. Ivanchenko
///		Date create	: 05-10-2014
///		Date update	: 05-10-2014
///		Comment		:
/// ============================================================================
#ifndef __APPLICATION_H__
#define __APPLICATION_H__

#include <QApplication>
#include <QTranslator>

#include "application_params.h"
#include "business_logic.h"

namespace template_qt
{

	class business_logic;
/// ############################################################################
///			class application
/// ############################################################################
	class application : public QApplication
	{
	Q_OBJECT
	/// ========================================================================
	///		CONSTRUCTORS/DESTRUCTOR
	/// ========================================================================
	private:
	/// ------------------------------------------------------------------------
		application( const application &rhs );

	public:
	/// ------------------------------------------------------------------------
		explicit application( int & argc, char ** argv );
	/// ------------------------------------------------------------------------
		~application( );

	/// ========================================================================
	///		PROPERTIES
	/// ========================================================================
	private:

	public:
	/// ------------------------------------------------------------------------

	/// ========================================================================
	///		FUNCTIONS
	/// ========================================================================
	private:
	/// ------------------------------------------------------------------------
		void initialize( );
	/// ------------------------------------------------------------------------
		void load_translation( );
    /// ------------------------------------------------------------------------
        void load_config( );
    /// ------------------------------------------------------------------------
        void find_db_file( );
    /// ------------------------------------------------------------------------
        bool check_db_file();
    /// ------------------------------------------------------------------------
        void init_db( );
    /// ------------------------------------------------------------------------
        void init_logic( );

	public:
	/// ------------------------------------------------------------------------
		static business_logic& the_business_logic( );
    /// ------------------------------------------------------------------------
        static application* program_instance( )
        {
            return static_cast<application*>( QApplication::instance( ) );
        }
    /// ------------------------------------------------------------------------
        void authorize( );

	/// ========================================================================
	///		OPERATORS
	/// ========================================================================
	private:
	/// ------------------------------------------------------------------------
		application& operator=( const application &rhs );

	/// ========================================================================
	///		SLOTS
	/// ========================================================================
	private slots:
    /// ------------------------------------------------------------------------
        void save_config( );

	/// ========================================================================
	///			FIELDS
    /// ========================================================================
    private:
		QTranslator _translator;
		static bool _is_logic_initialized;

        espira::utils::application_params _params;

	};//class application

//#############################################################################
//-----------------------------------------------------------------------------

}//namespace template_qt

#endif // __APPLICATION_H__
